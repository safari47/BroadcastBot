from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    CallbackQuery,
    Message,
)
from apscheduler.schedulers.asyncio import AsyncIOScheduler

from config.config import bot, dp, scheduler

router = Router()


@router.callback_query(F.data == "active_task")
async def add_group(call: CallbackQuery):
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –∏–∑ scheduler
    jobs = scheduler.get_jobs()

    if not jobs:
        await call.message.answer("–ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.")
    else:
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–¥–∞—á–∞—Ö
        message_text = "–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏:\n\n"
        for job in jobs:
            message_text += (
                f"üìåID –∑–∞–¥–∞—á–∏: `{job.id}`\n"
                f"üìù–ò–º—è –∑–∞–¥–∞—á–∏: {job.name}\n"
                f"‚è±Ô∏è–¢—Ä–∏–≥–≥–µ—Ä: {job.trigger}\n"
                f"üîú–í—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞: {job.next_run_time}\n"
                f"-----------------------------------\n"
            )
        await call.message.answer(message_text, parse_mode="MARKDOWN")

    await call.answer()


@router.callback_query(F.data == "clear_task")
async def add_group(call: CallbackQuery):
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏
    scheduler.remove_all_jobs()
    await call.message.answer("–í—Å–µ –∑–∞–¥–∞—á–∏ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã.")
    await call.answer()
